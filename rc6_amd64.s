// Code generated by command: go run asm.go -out rc6_amd64.s. DO NOT EDIT.

#include "textflag.h"

// func EncryptASM(c *rc6cipher, dst []byte, src []byte)
TEXT Â·EncryptASM(SB), NOSPLIT, $0-56
	MOVQ src_base+32(FP), CX
	MOVL (CX), AX
	MOVL 4(CX), DX
	MOVL 8(CX), BX
	MOVL 12(CX), BP
	MOVQ c+0(FP), SI
	ADDL (SI), DX
	ADDL 4(SI), BP
	ADDQ $0x08, SI
	MOVQ $0x00000000, DI

loop:
	MOVL  DX, R8
	IMULL DX, R8
	SHLL  $0x01, R8
	ADDL  DX, R8
	ROLL  $0x05, R8
	MOVL  BP, R9
	IMULL BP, R9
	SHLL  $0x01, R9
	ADDL  BP, R9
	ROLL  $0x05, R9
	XORL  R8, AX
	MOVB  R9, CL
	ROLL  CL, AX
	ADDL  (SI), AX
	XORL  R9, BX
	MOVB  R8, CL
	ROLL  CL, BX
	ADDL  4(SI), BX
	MOVL  AX, R8
	MOVL  DX, AX
	MOVL  BX, DX
	MOVL  BP, BX
	MOVL  R8, BP
	ADDQ  $0x08, SI
	ADDQ  $0x01, DI
	CMPQ  DI, $0x14
	JL    loop
	ADDL  (SI), AX
	ADDL  4(SI), BX
	MOVQ  dst_base+8(FP), CX
	MOVL  AX, (CX)
	MOVL  DX, 4(CX)
	MOVL  BX, 8(CX)
	MOVL  BP, 12(CX)
	RET
